// THIS FILE IS AUTO-GENERATED FOR ZOD. DO NOT EDIT.

import { z } from "zod";

// Generated by ts-to-zod

/*** Parameters for the ISteamUserAuth/AuthenticateUserTicket/v1 endpoint.
 * @see https://partner.steamgames.com/doc/webapi/ISteamUserAuth#AuthenticateUserTicket
 * @description Parameters for authenticating a user ticket.
 */
export const AuthenticateUserTicketRequest = z.object({
	/**
	 * @minLength 1
	 * @description Your Steamworks Web API publisher authentication key.
	 */
	key: z
		.string()
		.min(1)
		.describe("Your Steamworks Web API publisher authentication key."),
	/**
	 * @minimum 1
	 * @description The AppID of the game.
	 */
	appid: z.number().min(1).describe("The AppID of the game."),
	/**
	 * @minLength 1
	 * @description The hexadecimal string representation of the binary ticket data.
	 */
	ticket: z
		.string()
		.min(1)
		.describe(
			"The hexadecimal string representation of the binary ticket data."
		),
	/**
	 * @minLength 1
	 * @description Optional: A string identifier for the remote service.
	 */
	identity: z
		.string()
		.min(1)
		.optional()
		.describe("Optional: A string identifier for the remote service."),
});

/*** The response from the ISteamUserAuth/AuthenticateUserTicket/v1 endpoint.
 * @see https://partner.steamgames.com/doc/webapi/ISteamUserAuth#AuthenticateUserTicket
 * @description Response from authenticating a user ticket.
 */
export const AuthenticateUserTicketResponse = z.object({
	response: z.object({
		/**
		 * @pattern "^[0-9]{17}$"
		 * @description The user's 64-bit SteamID if the ticket is valid.
		 */
		steamid: z
			.string()
			.regex(/"^[0-9]{17}$"/)
			.optional()
			.describe("The user's 64-bit SteamID if the ticket is valid."),
		error: z
			.object({
				/**
				 * @description Error code if authentication fails.
				 */
				errorcode: z.number().describe("Error code if authentication fails."),
				/**
				 * @minLength 1
				 * @description Error description if authentication fails.
				 */
				errordesc: z
					.string()
					.min(1)
					.describe("Error description if authentication fails."),
			})
			.optional(),
	}),
});

// Generated by ts-to-zod

export type AuthenticateUserTicketRequest = z.infer<
	typeof AuthenticateUserTicketRequest
>;

export type AuthenticateUserTicketResponse = z.infer<
	typeof AuthenticateUserTicketResponse
>;
