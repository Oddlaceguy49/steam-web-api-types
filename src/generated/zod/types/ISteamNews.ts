// THIS FILE IS AUTO-GENERATED FOR ZOD. DO NOT EDIT.

import { z } from "zod";

// Generated by ts-to-zod

/*** Parameters for the ISteamNews/GetNewsForApp/v2 endpoint.
 * @see https://partner.steamgames.com/doc/webapi/ISteamNews#GetNewsForApp
 * @description Parameters for retrieving news for a specific app.
 */
export const GetNewsForAppRequest = z.object({
	/**
	 * @minimum 1
	 * @description The AppID of the game for which to retrieve news.
	 */
	appid: z
		.number()
		.min(1)
		.describe("The AppID of the game for which to retrieve news."),
	/**
	 * @minimum 0
	 * @description Maximum length for the content to return. If 0, the full content is returned; if less than the full content, a blurb is generated.
	 */
	maxlength: z
		.number()
		.min(0)
		.optional()
		.describe(
			"Maximum length for the content to return. If 0, the full content is returned; if less than the full content, a blurb is generated."
		),
	/**
	 * @format unix-timestamp
	 * @description Retrieve posts earlier than this Unix epoch timestamp.
	 */
	enddate: z
		.number()
		.optional()
		.describe("Retrieve posts earlier than this Unix epoch timestamp."),
	/**
	 * @minimum 0
	 * @description Number of posts to retrieve (default is 20).
	 */
	count: z
		.number()
		.min(0)
		.optional()
		.describe("Number of posts to retrieve (default is 20)."),
	/**
	 * @description Comma-separated list of feed names to return news for.
	 */
	feeds: z
		.string()
		.optional()
		.describe("Comma-separated list of feed names to return news for."),
	/**
	 * @description Comma-separated list of tags to filter by (e.g., 'patchnodes').
	 */
	tags: z
		.string()
		.optional()
		.describe(
			"Comma-separated list of tags to filter by (e.g., 'patchnodes')."
		),
});

/*** Represents a single news item.
 * @description A single news item for a Steam app.
 */
export const NewsItem = z.object({
	/**
	 * @pattern "^[0-9]+$"
	 * @description The unique ID of the news item.
	 */
	gid: z
		.string()
		.regex(/"^[0-9]+$"/)
		.describe("The unique ID of the news item."),
	/**
	 * @description The title of the news item.
	 */
	title: z.string().describe("The title of the news item."),
	/**
	 * @format url
	 * @description The URL to the news item.
	 */
	url: z.string().url().describe("The URL to the news item."),
	/**
	 * @description True if the URL is external, false otherwise.
	 */
	is_external_url: z
		.boolean()
		.describe("True if the URL is external, false otherwise."),
	/**
	 * @description The author of the news item.
	 */
	author: z.string().describe("The author of the news item."),
	/**
	 * @description The full content of the news item.
	 */
	contents: z.string().describe("The full content of the news item."),
	/**
	 * @description The label of the news feed.
	 */
	feedlabel: z.string().describe("The label of the news feed."),
	/**
	 * @format unix-timestamp
	 * @description The Unix timestamp of when the news item was published.
	 */
	date: z
		.number()
		.describe("The Unix timestamp of when the news item was published."),
	/**
	 * @description The name of the news feed.
	 */
	feedname: z.string().describe("The name of the news feed."),
	/**
	 * @description The type of the news feed.
	 */
	feed_type: z.number().describe("The type of the news feed."),
	/**
	 * @minimum 1
	 * @description The AppID associated with the news item.
	 */
	appid: z.number().min(1).describe("The AppID associated with the news item."),
});

/*** The response from the ISteamNews/GetNewsForApp/v2 endpoint.
 * @see https://partner.steamgames.com/doc/webapi/ISteamNews#GetNewsForApp
 * @description Response containing news items for a specific app.
 */
export const GetNewsForAppResponse = z.object({
	appnews: z.object({
		/**
		 * @minimum 1
		 * @description The AppID of the game.
		 */
		appid: z.number().min(1).describe("The AppID of the game."),
		newsitems: z.array(NewsItem),
	}),
});

// Generated by ts-to-zod

export type GetNewsForAppRequest = z.infer<typeof GetNewsForAppRequest>;

export type NewsItem = z.infer<typeof NewsItem>;

export type GetNewsForAppResponse = z.infer<typeof GetNewsForAppResponse>;
