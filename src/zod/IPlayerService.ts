// THIS FILE IS AUTO-GENERATED. DO NOT EDIT.

// Generated by ts-to-zod
import { z } from "zod";

/*** Parameters for the IPlayerService/GetRecentlyPlayedGames/v1 endpoint.
 * @see https://partner.steamgames.com/doc/webapi/IPlayerService#GetRecentlyPlayedGames
 * @description Parameters for retrieving recently played games for a user.
 */
export const getRecentlyPlayedGamesRequestSchema = z.object({
    /**
     * @pattern ^[0-9]{17}$
     * @description The 64-bit SteamID of the user.
     */
    steamid: z.string().regex(/^[0-9]{17}$/).describe("The 64-bit SteamID of the user."),
    /**
     * @minimum 0
     * @description The number of games to return (0 to 100).
     */
    count: z.number().min(0).optional().describe("The number of games to return (0 to 100).")
});

/*** Represents a recently played game.
 * @description Information about a recently played game.
 */
export const recentlyPlayedGameSchema = z.object({
    /**
     * @minimum 1
     * @description The AppID of the game.
     */
    appid: z.number().min(1).describe("The AppID of the game."),
    /**
     * @description The name of the game.
     */
    name: z.string().describe("The name of the game."),
    /**
     * @minimum 0
     * @description Total playtime in the last 2 weeks, in minutes.
     */
    playtime_2weeks: z.number().min(0).describe("Total playtime in the last 2 weeks, in minutes."),
    /**
     * @minimum 0
     * @description Total playtime forever, in minutes.
     */
    playtime_forever: z.number().min(0).describe("Total playtime forever, in minutes."),
    /**
     * @format url
     * @description The URL to the game's icon.
     */
    img_icon_url: z.string().url().describe("The URL to the game's icon."),
    /**
     * @format url
     * @description The URL to the game's logo.
     */
    img_logo_url: z.string().url().describe("The URL to the game's logo."),
    /**
     * @description True if the game has community visible stats.
     */
    has_community_visible_stats: z.boolean().describe("True if the game has community visible stats.")
});

/*** The response from the ISteamService/GetRecentlyPlayedGames/v1 endpoint.
 * @see https://partner.steamgames.com/doc/webapi/IPlayerService#GetRecentlyPlayedGames
 * @description Response containing recently played games for a user.
 */
export const getRecentlyPlayedGamesResponseSchema = z.object({
    response: z.object({
        /**
         * @minimum 0
         * @description The total number of games.
         */
        total_count: z.number().min(0).describe("The total number of games."),
        games: z.array(recentlyPlayedGameSchema)
    })
});
